[{
    "id" : 11,
    "name" : "Promises",
    "tag": "JavaScript",
    "description" : "Promise is an object which represent eventual completion or failure of an asynchronus operation and its value. \nPromise has 3 states pending, fulfilled, rejected.\nPromise has few static methods \n1.Promise.all() 2.Promise.allSettled() 3.Promise.any()"
},
{
    "id" : 12,
    "name" : "Closures",
    "tag": "JavaScript",
    "description" : "Closure is function inside another function which has access to its outer scope variables or outer functions variables"
},
{
    "id" : 21,
    "name" : "Observables",
    "tag": "RxJs",
    "description" : "An Observable is a function that converts the ordinary stream of data into an Observable stream of data. You can think of Observable as a wrapper around the Ordinary stream of data."
},
{
    "id" : 22,
    "name" : "Subject",
    "tag": "RxJs",
    "description" : "An RxJS Subject is a special type of Observable that allows values to be multicast to many Observers. While plain Observables are unicast (each subscribed Observer owns an independent execution of the Observable), Subjects are multicast.A Subject is like an observable but can be multicast to many Observers. Subjects are like Event Emitters: they maintain a registry of many listeners.It is a part of the Reactive Extensions for JavaScript (RxJS) library, which is included by default in Angular projects."
},
{
    "id" : 4,
    "name" : "BehaviousSubject",
    "tag": "RxJs",
    "description" : "BehaviorSubjects are a type of Subject that: Has an initial value. Subscribers will receive the last emitted value upon subscription."
},
{
    "id" : 31,
    "name" : "Palindrome Number",
    "tag": "DSA",
    "description" : "An Integer is palindrom when it reads same forward and backword."
},
{
    "id" : 32,
    "name" : "Unique Character String",
    "tag": "DSA",
    "description" : "Use of 'for of' and 'for loop' to find count of characters and first unique character from a string"
},
{
    "id" : 33,
    "name" : "Fibonacci series",
    "tag": "DSA",
    "description" : "Fibonacci series 0, 1, 1, 2, 3, 5, 8, 13 , 21..... \n how to ind Fibonacci number on given position \n Use of F(n) = F(n-1)+F(n-2) to find fibonacci number"
},
{
    "id" : 34,
    "name" :   "Recursion",
    "tag": "DSA",
    "description" : "A function which calls itself withing its body is called recursion"
},
{
    "id" : 35,
    "name" :   "Anagram",
    "tag": "DSA",
    "description" : "Anagram is word or phrase which is formed by rearranging letters of another word or phrase"
}]